#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ª–æ–≥–∏–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ –Ω–µ–¥–µ–ª–∏
"""

from datetime import datetime, timedelta
from main import get_current_week_type

def test_week_logic():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ –Ω–µ–¥–µ–ª–∏"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ –Ω–µ–¥–µ–ª–∏")
    print("=" * 50)

    # –ë–∞–∑–æ–≤–∞—è –¥–∞—Ç–∞ - 19 –æ–∫—Ç—è–±—Ä—è 2025 (–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ, –∫–æ–Ω–µ—Ü –Ω–µ—á–µ—Ç–Ω–æ–π –Ω–µ–¥–µ–ª–∏)
    base_date = datetime(2025, 10, 19)

    print(f"–ë–∞–∑–æ–≤–∞—è –¥–∞—Ç–∞: {base_date.strftime('%d.%m.%Y')} (–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ) - –∫–æ–Ω–µ—Ü –Ω–µ—á–µ—Ç–Ω–æ–π –Ω–µ–¥–µ–ª–∏")
    print("–õ–æ–≥–∏–∫–∞: —á–µ—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–¥–µ–ª—å —Å –±–∞–∑–æ–≤–æ–π –¥–∞—Ç—ã = –Ω–µ—á–µ—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è")
    print("        –Ω–µ—á–µ—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–¥–µ–ª—å —Å –±–∞–∑–æ–≤–æ–π –¥–∞—Ç—ã = —á–µ—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è")
    print()

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–∞—Ç
    test_dates = [
        datetime(2025, 10, 19),  # –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ - –∫–æ–Ω–µ—Ü –Ω–µ—á–µ—Ç–Ω–æ–π –Ω–µ–¥–µ–ª–∏ (0 –Ω–µ–¥–µ–ª—å)
        datetime(2025, 10, 20),  # –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ - –Ω–∞—á–∞–ª–æ —á–µ—Ç–Ω–æ–π –Ω–µ–¥–µ–ª–∏ (1 –¥–µ–Ω—å = 0 –Ω–µ–¥–µ–ª—å)
        datetime(2025, 10, 26),  # –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ —á–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é - –∫–æ–Ω–µ—Ü —á–µ—Ç–Ω–æ–π –Ω–µ–¥–µ–ª–∏ (7 –¥–Ω–µ–π = 1 –Ω–µ–¥–µ–ª—è)
        datetime(2025, 10, 27),  # –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ - –Ω–∞—á–∞–ª–æ –Ω–µ—á–µ—Ç–Ω–æ–π –Ω–µ–¥–µ–ª–∏ (8 –¥–Ω–µ–π = 1 –Ω–µ–¥–µ–ª—è)
        datetime(2025, 11, 2),   # –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ —á–µ—Ä–µ–∑ 2 –Ω–µ–¥–µ–ª–∏ - –∫–æ–Ω–µ—Ü –Ω–µ—á–µ—Ç–Ω–æ–π –Ω–µ–¥–µ–ª–∏ (14 –¥–Ω–µ–π = 2 –Ω–µ–¥–µ–ª–∏)
        datetime(2025, 11, 3),   # –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ - –Ω–∞—á–∞–ª–æ —á–µ—Ç–Ω–æ–π –Ω–µ–¥–µ–ª–∏ (15 –¥–Ω–µ–π = 2 –Ω–µ–¥–µ–ª–∏)
    ]

    for test_date in test_dates:
        days_since_base = (test_date - base_date).days
        weeks_since_base = days_since_base // 7
        week_type = get_current_week_type_for_date(test_date)

        print(f"–î–∞—Ç–∞: {test_date.strftime('%d.%m.%Y')} ({test_date.strftime('%A', locale='ru')})")
        print(f"  –î–Ω–µ–π —Å –±–∞–∑–æ–≤–æ–π –¥–∞—Ç—ã: {days_since_base}")
        print(f"  –ü–æ–ª–Ω—ã—Ö –Ω–µ–¥–µ–ª—å: {weeks_since_base}")
        print(f"  –¢–∏–ø –Ω–µ–¥–µ–ª–∏: {week_type}")
        print()

def get_current_week_type_for_date(date):
    """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø –Ω–µ–¥–µ–ª–∏ –¥–ª—è –∑–∞–¥–∞–Ω–Ω–æ–π –¥–∞—Ç—ã (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)"""
    base_date = datetime(2025, 10, 19)  # –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ - –∫–æ–Ω–µ—Ü –Ω–µ—á–µ—Ç–Ω–æ–π –Ω–µ–¥–µ–ª–∏
    days_since_base = (date - base_date).days
    weeks_since_base = days_since_base // 7

    # –ë–∞–∑–æ–≤–∞—è –¥–∞—Ç–∞ - –∫–æ–Ω–µ—Ü –Ω–µ—á–µ—Ç–Ω–æ–π –Ω–µ–¥–µ–ª–∏, –ø–æ—ç—Ç–æ–º—É:
    # –ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ —á–µ—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–¥–µ–ª—å - –Ω–µ—á–µ—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è
    # –ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ –Ω–µ—á–µ—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–¥–µ–ª—å - —á–µ—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è
    if weeks_since_base % 2 == 0:
        return 1  # –Ω–µ—á–µ—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è
    else:
        return 2  # —á–µ—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è

if __name__ == "__main__":
    test_week_logic()

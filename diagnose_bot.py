#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Telegram –±–æ—Ç–∞ –¥–ª—è Render
–ó–∞–ø—É—Å–∫–∞–π—Ç–µ –ª–æ–∫–∞–ª—å–Ω–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö —Å–∏—Å—Ç–µ–º
"""

import os
import sys
import json
import requests
import asyncio
from urllib.parse import urlparse

def check_environment_variables():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    print("üîç –ü–†–û–í–ï–†–ö–ê –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø")
    print("=" * 50)

    required_vars = {
        'TELEGRAM_BOT_TOKEN': '–¢–æ–∫–µ–Ω Telegram –±–æ—Ç–∞',
        'SCHEDULE_JSON': 'JSON —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º',
        'RENDER_APP_NAME': '–ò–º—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Render (telegram-itmo-bot)'
    }

    optional_vars = {
        'PORT': '–ü–æ—Ä—Ç —Å–µ—Ä–≤–µ—Ä–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 10000)',
        'WEBHOOK_URL': '–ü–æ–ª–Ω—ã–π URL webhook (–µ—Å–ª–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è RENDER_APP_NAME)'
    }

    all_good = True

    for var, description in required_vars.items():
        value = os.getenv(var)
        if value:
            print(f"‚úÖ {description}: –£–°–¢–ê–ù–û–í–õ–ï–ù")
        else:
            print(f"‚ùå {description}: –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù")
            all_good = False

    print("\n–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:")
    for var, description in optional_vars.items():
        value = os.getenv(var)
        if value:
            print(f"‚úÖ {description}: {value}")
        else:
            print(f"‚ö†Ô∏è {description}: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)")

    return all_good

def check_render_service():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–∞ –Ω–∞ Render"""
    print("\nüåê –ü–†–û–í–ï–†–ö–ê –°–ï–†–í–ò–°–ê RENDER")
    print("=" * 50)

    app_name = os.getenv('RENDER_APP_NAME', 'telegram-itmo-bot')
    base_url = f"https://{app_name}.onrender.com"

    endpoints = [
        ('–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞', '/', 'Bot is running'),
        ('–°—Ç–∞—Ç—É—Å', '/status', 'bot_running'),
        ('–ó–¥–æ—Ä–æ–≤—å–µ', '/health', 'status'),
        ('–ü—Ä–æ–≤–µ—Ä–∫–∞ webhook', '/check-webhook', 'webhook_url')
    ]

    all_good = True

    for name, endpoint, check_key in endpoints:
        try:
            response = requests.get(f"{base_url}{endpoint}", timeout=10)
            if response.status_code == 200:
                print(f"‚úÖ {name}: –î–æ—Å—Ç—É–ø–Ω–∞")

                if check_key:
                    try:
                        data = response.json()
                        if check_key in data:
                            print(f"   üìä {check_key}: {data[check_key]}")
                        else:
                            print(f"   ‚ö†Ô∏è –ö–ª—é—á {check_key} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ")
                    except:
                        print(f"   üìù –û—Ç–≤–µ—Ç: {response.text[:100]}...")
            else:
                print(f"‚ùå {name}: –û—à–∏–±–∫–∞ {response.status_code}")
                all_good = False

        except requests.exceptions.RequestException as e:
            print(f"‚ùå {name}: –ù–µ –¥–æ—Å—Ç—É–ø–Ω–∞ - {e}")
            all_good = False

    return all_good

def check_telegram_webhook():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook –≤ Telegram"""
    print("\nüì° –ü–†–û–í–ï–†–ö–ê WEBHOOK –í TELEGRAM")
    print("=" * 50)

    token = os.getenv('TELEGRAM_BOT_TOKEN')
    app_name = os.getenv('RENDER_APP_NAME', 'telegram-itmo-bot')

    if not token:
        print("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return False

    expected_webhook_url = f"https://{app_name}.onrender.com/webhook"

    try:
        response = requests.get(f"https://api.telegram.org/bot{token}/getWebhookInfo", timeout=10)
        if response.status_code == 200:
            data = response.json()
            if data.get('ok'):
                webhook_info = data.get('result', {})

                print(f"üìç –¢–µ–∫—É—â–∏–π webhook URL: {webhook_info.get('url', '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')}")
                print(f"üéØ –û–∂–∏–¥–∞–µ–º—ã–π URL: {expected_webhook_url}")
                print(f"üìä –û–∂–∏–¥–∞—é—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {webhook_info.get('pending_update_count', 0)}")

                if webhook_info.get('url') == expected_webhook_url:
                    print("‚úÖ Webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
                    return True
                else:
                    print("‚ùå Webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ")
                    print(f"   –¢—Ä–µ–±—É–µ—Ç—Å—è: {expected_webhook_url}")
                    return False
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ API Telegram: {data}")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ HTTP: {response.status_code}")
            return False

    except requests.exceptions.RequestException as e:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Telegram API: {e}")
        return False

def check_bot_info():
    """–ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ"""
    print("\nü§ñ –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ë–û–¢–ï")
    print("=" * 50)

    token = os.getenv('TELEGRAM_BOT_TOKEN')

    if not token:
        print("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return False

    try:
        response = requests.get(f"https://api.telegram.org/bot{token}/getMe", timeout=10)
        if response.status_code == 200:
            data = response.json()
            if data.get('ok'):
                bot_info = data.get('result', {})
                print(f"üìõ –ò–º—è –±–æ—Ç–∞: {bot_info.get('first_name')}")
                print(f"üë§ Username: @{bot_info.get('username')}")
                print(f"üÜî ID: {bot_info.get('id')}")
                print(f"üåê –ú–æ–∂–µ—Ç –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—Ç—å—Å—è –∫ –≥—Ä—É–ø–ø–∞–º: {bot_info.get('can_join_groups', False)}")
                print(f"ü§ñ –≠—Ç–æ –±–æ—Ç: {bot_info.get('is_bot', False)}")

                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ API Telegram: {data}")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ HTTP: {response.status_code}")
            return False

    except requests.exceptions.RequestException as e:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Telegram API: {e}")
        return False

def test_schedule_json():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å JSON —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è"""
    print("\nüìÖ –ü–†–û–í–ï–†–ö–ê –†–ê–°–ü–ò–°–ê–ù–ò–Ø")
    print("=" * 50)

    schedule_json = os.getenv('SCHEDULE_JSON')

    if not schedule_json:
        print("‚ùå SCHEDULE_JSON –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return False

    try:
        data = json.loads(schedule_json)
        print("‚úÖ JSON –≤–∞–ª–∏–¥–µ–Ω")

        if 'schedule' in data:
            schedule = data['schedule']
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω —Ä–∞–∑–¥–µ–ª 'schedule' —Å {len(schedule)} –Ω–µ–¥–µ–ª—è–º–∏")

            for i, week in enumerate(schedule):
                if 'week' in week and 'days' in week:
                    print(f"   üìÖ –ù–µ–¥–µ–ª—è {week['week']}: {len(week['days'])} –¥–Ω–µ–π")
                else:
                    print(f"   ‚ö†Ô∏è –ù–µ–¥–µ–ª—è {i+1}: –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞")
        else:
            print("‚ùå –†–∞–∑–¥–µ–ª 'schedule' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ JSON")
            return False

        return True

    except json.JSONDecodeError as e:
        print(f"‚ùå –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π JSON: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ JSON: {e}")
        return False

def run_full_diagnosis():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–æ–ª–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É"""
    print("üîç –ü–û–õ–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê TELEGRAM –ë–û–¢–ê")
    print("=" * 60)
    print(f"üìÖ –í—Ä–µ–º—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: {__import__('datetime').datetime.now()}")
    print("=" * 60)

    tests = [
        ("–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è", check_environment_variables),
        ("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ", check_bot_info),
        ("JSON —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è", test_schedule_json),
        ("–°—Ç–∞—Ç—É—Å Render", check_render_service),
        ("Webhook Telegram", check_telegram_webhook),
    ]

    results = []

    for test_name, test_func in tests:
        print(f"\n{'='*20} {test_name} {'='*20}")
        try:
            result = test_func()
            results.append((test_name, result))
        except Exception as e:
            print(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ {test_name}: {e}")
            results.append((test_name, False))

    # –ò—Ç–æ–≥–∏
    print(f"\n{'='*60}")
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò")
    print(f"{'='*60}")

    passed = 0
    total = len(results)

    for test_name, success in results:
        status = "‚úÖ –ü–†–û–ô–î–ï–ù" if success else "‚ùå –ü–†–û–í–ê–õ–ï–ù"
        print(f"{test_name}: {status}")

        if success:
            passed += 1

    print(f"\nüéØ –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")

    if passed == total:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! –ë–æ—Ç –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
        print("\nüìù –ï—Å–ª–∏ –±–æ—Ç –≤—Å–µ –µ—â–µ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –≤ Telegram:")
        print("   1. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É /start –±–æ—Ç—É")
        print("   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –Ω–∞ Render –≤ Dashboard")
        print("   3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤ Telegram")
    elif passed >= total // 2:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã, –Ω–æ –±–æ—Ç –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å")
        print("   –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–≤–∞–ª–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã")
    else:
        print("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã!")
        print("   –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–≤–∞–ª–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º")

    return passed == total

if __name__ == "__main__":
    try:
        success = run_full_diagnosis()

        if not success:
            print(f"\nüí° –î–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —Å –≤–∞—à–∏–º–∏ —Ä–µ–∞–ª—å–Ω—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
            print(f"   1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä —Å –≤–∞—à–∏–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏")
            print(f"   2. –ò–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É –æ–Ω–ª–∞–π–Ω:")
            print(f"      curl -s https://telegram-itmo-bot.onrender.com/check-webhook")

        sys.exit(0 if success else 1)

    except KeyboardInterrupt:
        print("\n\nüëã –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(1)
    except Exception as e:
        print(f"\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)
